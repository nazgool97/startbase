# --- Stage 1: Builder –Ω–∞ –æ—Å–Ω–æ–≤–µ Alpine + Golang
FROM golang:1.23.11-alpine AS builder

WORKDIR /src

# –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
COPY go.mod go.sum ./
RUN go mod download

# –ö–æ–ø–∏—Ä—É–µ–º –≤–µ—Å—å –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
COPY . .

# –°–±–æ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞ (–±–µ–∑ CGO, –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞)
RUN CGO_ENABLED=0 GOOS=linux go build -o startbase ./cmd/server

# --- Stage 2: Production –æ–±—Ä–∞–∑
FROM alpine:latest

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä–Ω–µ–≤—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
RUN apk --no-cache add ca-certificates

WORKDIR /app

# –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏–∑ builder
COPY --from=builder /src/startbase .
COPY --from=builder /src/templates ./templates

# üîí –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
EXPOSE 8080

# ‚úÖ –ü—Ä–æ–¥–∞–∫—à–Ω-—Ä–µ–∂–∏–º –¥–ª—è Gin (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
ENV GIN_MODE=release

# üö¶ –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–π healthcheck (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
HEALTHCHECK --interval=30s --timeout=5s \
  CMD wget --spider http://localhost:8080/health || exit 1

# üîÅ –ó–∞–ø—É—Å–∫
ENTRYPOINT ["./startbase"]